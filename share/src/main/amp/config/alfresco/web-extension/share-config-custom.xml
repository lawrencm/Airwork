<alfresco-config>
  <!-- Global config section -->
  <config replace="true">
    <flags>
      <!--
            Developer debugging setting to turn on DEBUG mode for client scripts in the browser
         -->
      <client-debug>false</client-debug>
      <!--
            LOGGING can always be toggled at runtime when in DEBUG mode (Ctrl, Ctrl, Shift, Shift).
            This flag automatically activates logging on page load.
         -->
      <client-debug-autologging>false</client-debug-autologging>
    </flags>
  </config>
  <config condition="WebFramework" evaluator="string-compare">
    <web-framework>
      <!-- SpringSurf Autowire Runtime Settings -->
      <!-- 
              Developers can set mode to 'development' to disable; SpringSurf caches,
              FreeMarker template caching and Rhino JavaScript compilation.
         -->
      <autowire>
        <!-- Pick the mode: "production" or "development" -->
        <mode>production</mode>
      </autowire>
      <!-- Allows extension modules with <auto-deploy>set to true to be automatically deployed -->
      <module-deployment>
        <mode>manual</mode>
        <enable-auto-deploy-modules>true</enable-auto-deploy-modules>
      </module-deployment>
    </web-framework>
  </config>
  <config condition="Replication" evaluator="string-compare">
    <share-urls>
      <!--
            To discover a Repository Id, browse to the remote server's CMIS landing page at:
              http://{server}:{port}/alfresco/service/cmis/index.html
            The Repository Id field is found under the "CMIS Repository Information" expandable panel.

            Example config entry:
              <share-url repositoryId="622f9533-2a1e-48fe-af4e-ee9e41667ea4">http://new-york-office:8080/share/</share-url>-->
    </share-urls>
  </config>
  <!-- Document Library config section -->
  <config condition="DocumentLibrary" evaluator="string-compare" replace="true">
    <tree>
      <!--
            Whether the folder Tree component should enumerate child folders or not.
            This is a relatively expensive operation, so should be set to "false" for Repositories with broad folder structures.
         -->
      <evaluate-child-folders>false</evaluate-child-folders>
      <!--
            Optionally limit the number of folders shown in treeview throughout Share.
         -->
      <maximum-folder-count>-1</maximum-folder-count>
    </tree>
    <!--
         Used by the "Manage Aspects" action

         For custom aspects, remember to also add the relevant i18n string(s)
            cm_myaspect=My Aspect
      -->
    <aspects>
      <!-- Aspects that a user can see -->
      <visible>
        <aspect name="cm:generalclassifiable"/>
        <aspect name="cm:complianceable"/>
        <aspect name="cm:dublincore"/>
        <aspect name="cm:effectivity"/>
        <aspect name="cm:summarizable"/>
        <aspect name="cm:versionable"/>
        <aspect name="cm:templatable"/>
        <aspect name="cm:emailed"/>
        <aspect name="emailserver:aliasable"/>
        <aspect name="cm:taggable"/>
        <aspect name="app:inlineeditable"/>
        <aspect name="gd:googleEditable"/>
        <aspect name="cm:geographic"/>
        <aspect name="exif:exif"/>
        <aspect name="md:mergeDocsData"/>
      </visible>
      <!-- Aspects that a user can add. Same as "visible" if left empty -->
      <addable/>
      <!-- Aspects that a user can remove. Same as "visible" if left empty -->
      <removeable/>
    </aspects>
    <!--
         Used by the "Change Type" action

         Define valid subtypes using the following example:
            <type name="cm:content"><subtype name="cm:mysubtype" /></type>Remember to also add the relevant i18n string(s):
            cm_mysubtype=My SubType
      -->
    <types>
      <type name="cm:content"/>
      <type name="cm:folder"/>
    </types>
    <!--
         If set, will present a WebDAV link for the current item on the Document and Folder details pages.
         Also used to generate the "View in Alfresco Explorer" action for folders.
      -->
    <!-- <repository-url>http://localhost:8080/alfresco</repository-url>-->
    <!--
         Google Docs™ integration
      -->
    <google-docs>
      <!--
            Enable/disable the Google Docs UI integration (Extra types on Create Content menu, Google Docs actions).
         -->
      <enabled>true</enabled>
      <!--
            The mimetypes of documents Google Docs allows you to create via the Share interface.
            The I18N label is created from the "type" attribute, e.g. google-docs.doc=Google Docs&trade; Document
         -->
      <creatable-types>
        <creatable type="doc">application/msword</creatable>
        <creatable type="xls">application/vnd.ms-excel</creatable>
        <creatable type="ppt">application/vnd.ms-powerpoint</creatable>
      </creatable-types>
    </google-docs>
    <!--
         File upload configuration
      -->
    <file-upload>
      <!--
            Adobe Flash™
            In certain environments, an HTTP request originating from Flash cannot be authenticated using an existing session.
            See: http://bugs.adobe.com/jira/browse/FP-4830
            For these cases, it is useful to disable the Flash-based uploader for Share Document Libraries.
         -->
      <adobe-flash-enabled>true</adobe-flash-enabled>
    </file-upload>
  </config>
  <!-- Custom DocLibActions config section -->
  <config condition="DocLibActions" evaluator="string-compare">
    <actions>
      <action icon="email" id="airwork.doclib.action.combineSelectedDocs" label="Create a compound document" type="javascript">
        <param name="label">actions.airwork.combineSelectedDocs</param>
        <param name="function">onActionCombineSelectedDocs</param>
        <param name="successMessage">mergedocs.combinedocs.success</param>
        <param name="failureMessage">mergedocs.combinedocs.failure</param>
      </action>
    </actions>
    <actionGroups>
      <actionGroup id="folder-browse">
        <action id="airwork.doclib.action.combineSelectedDocs" index="500"/>
      </actionGroup>
      <actionGroup id="folder-details">
        <action id="airwork.doclib.action.combineSelectedDocs" index="500"/>
      </actionGroup>
      <actionGroup id="document-browse">
        <action id="airwork.doclib.action.combineSelectedDocs" index="500"/>
      </actionGroup>
      <actionGroup id="document-details">
        <action id="airwork.doclib.action.combineSelectedDocs" index="500"/>
      </actionGroup>
    </actionGroups>
  </config>
  <!-- Global folder picker config section -->
  <config condition="GlobalFolder" evaluator="string-compare">
    <siteTree>
      <container type="cm:folder">
        <!-- Use a specific label for this container type in the tree -->
        <rootLabel>location.path.documents</rootLabel>
        <!-- Use a specific uri to retreive the child nodes for this container type in the tree -->
        <uri>slingshot/doclib/treenode/site/{site}/{container}{path}?children={evaluateChildFoldersSite}&amp;max={maximumFolderCountSite}</uri>
      </container>
    </siteTree>
  </config>
  <!-- Repository Library config section -->
  <config condition="RepositoryLibrary" evaluator="string-compare" replace="true">
    <!--
         Root nodeRef or xpath expression for top-level folder.
         e.g. alfresco://user/home, /app:company_home/st:sites/cm:site1
         If using an xpath expression, ensure it is properly ISO9075 encoded here.
      -->
    <root-node>alfresco://company/home</root-node>
    <tree>
      <!--
            Whether the folder Tree component should enumerate child folders or not.
            This is a relatively expensive operation, so should be set to "false" for Repositories with broad folder structures.
         -->
      <evaluate-child-folders>false</evaluate-child-folders>
      <!--
            Optionally limit the number of folders shown in treeview throughout Share.
         -->
      <maximum-folder-count>500</maximum-folder-count>
    </tree>
  </config>
  <!-- Kerberos settings -->
  <!-- To enable kerberos rename this condition to "Kerberos" -->
  <config condition="KerberosDisabled" evaluator="string-compare" replace="true">
    <kerberos>
      <!--
            Password for HTTP service account.
            The account name *must* be built from the HTTP server name, in the format :
               HTTP/<server_name>@<realm>(NB this is because the web browser requests an ST for the
            HTTP/<server_name>principal in the current realm, so if we're to decode
            that ST, it has to match.)
         -->
      <password>secret</password>
      <!--
            Kerberos realm and KDC address.
         -->
      <realm>ALFRESCO.ORG</realm>
      <!--
            Service Principal Name to use on the repository tier.
            This must be like: HTTP/host.name@REALM
         -->
      <endpoint-spn>HTTP/repository.server.com@ALFRESCO.ORG</endpoint-spn>
      <!--
            JAAS login configuration entry name.
         -->
      <config-entry>ShareHTTP</config-entry>
    </kerberos>
  </config>
  <!-- Custom actions -->
  <config condition="DocLibCustom" evaluator="string-compare">
    <dependencies>
      <js src="scripts/components/documentlibrary/combine-docs-action.js"/>
    </dependencies>
    <dependencies/>
  </config>
  <!-- <config evaluator="string-compare" condition="DocLibActions"><actions><action id="airwork.doclib.action.combineDocs"
                 icon="email"
                 type="javascript"
                 label="mergedocs.combinedocs"><param name="label">actions.airwork.combinedocs</param><param name="function">onActionCombineDocs</param>-->
  <!-- <param name="function">onActionFormDialog</param>-->
  <!--          <param name="itemKind">action</param><param name="itemId">mergedocs</param>-->
  <!--            <param name="successMessage">mergedocs.combinedocs.success</param><param name="failureMessage">mergedocs.combinedocs.failure</param><evaluator negate="true">mycompany.evaluator.doclib.action.isEmailed 
            </evaluator></action></actions><actionGroups><actionGroup id="folder-browse"><action index="400" id="airwork.doclib.action.combineDocs" /></actionGroup><actionGroup id="folder-details"><action index="400" id="airwork.doclib.action.combineDocs" /></actionGroup><actionGroup id="document-browse"><action index="400" id="airwork.doclib.action.combineDocs" /></actionGroup><actionGroup id="document-details"><action index="400" id="airwork.doclib.action.combineDocs" /></actionGroup></actionGroups></config>-->
  <!-- Send As Email Action Form -->
 <!--  <config condition="cm:folder" evaluator="node-type">
    <forms>
      <form id="mergedocxform">
        <field-visibility>
          <show force="false" id="md:name"/>
          <show force="false" id="md:generateFrom"/>
        </field-visibility>
        <edit-form template="../documentlibrary/forms/doclib-simple-metadata.ftl"/>
        <appearance>
          <field id="md:name" mandatory="false" read-only="false"/>
          <set appearance="bordered-panel" id="bordered-panel"/>
          <field id="md:generateFrom" label="Generated From" mandatory="false" read-only="false" set="bordered-panel">

          </field>
        </appearance>
      </form>
      <form id="mergedocxformall">
        <field-visibility>
          <show force="false" id="md:name"/>
        </field-visibility>
        <appearance>
          <field id="md:name" mandatory="false" read-only="false"/>
        </appearance>
      </form>      
    </forms>
  </config>
  <config condition="md:compoundDocScaffold" evaluator="node-type" replace="true">
    <forms>
      <form>
        <field-visibility>
          <show force="false" id="md:name"/>
          <show force="false" id="md:generateFrom"/>
        </field-visibility>
        <appearance>
          <field id="md:name" mandatory="false" read-only="false" label="name 1"/>
          <set appearance="bordered-panel" id="bordered-panel"/>
          <field id="md:generateFrom" label="Generated From" mandatory="false" read-only="false" set="bordered-panel">
          </field>
        </appearance>
      </form> 
     
    </forms>
  </config>-->
  <config condition="md:compoundDocScaffold" evaluator="model-type" replace="true">
    <forms>
      <form>
        <field-visibility>
          <show force="false" id="md:name"/>
          <show force="false" id="md:generateFrom"/>
        </field-visibility>
        <appearance>
          <field id="md:name" mandatory="false" read-only="false" label="Name of the new document"/>
          <field id="md:generateFrom" label="Generate from these documents" mandatory="false" read-only="false" />
            <!--                    <control><control-param name="selectedValueContextProperty">alfresco/site-webscripts/com/airwork/onCreateMergeDocScafold.js</control-param></control>-->
        </appearance>
      </form>   
      </forms>  
  </config>
  <!-- display the merge docs association aspect data on cm:content items -->
  <config condition="cm:content" evaluator="node-type">
    <forms>
      <form>
        <field-visibility>
          <!-- fields from my example aspect -->
          <show id="md:mergedDocs"/>
        </field-visibility>
      </form>
    </forms>
  </config>
  <!--    <config evaluator="string-compare" condition="DocumentLibrary"><indicators><indicator id="mycompany.indicator.doclib.action.isEmailed"
                         icon="email-16.png"
                         index="100"
                         label="indicators.mycompany.emailed"><evaluator>mycompany.evaluator.doclib.action.isEmailed</evaluator></indicator></indicators></config>-->
  <!-- example port config used to access remote Alfresco server (default is 8080) -->
  <!--
   <config evaluator="string-compare" condition="Remote"><remote><endpoint><id>alfresco-noauth</id><name>Alfresco - unauthenticated access</name><description>Access to Alfresco Repository WebScripts that do not require authentication</description><connector-id>alfresco</connector-id><endpoint-url>http://localhost:8080/alfresco/s</endpoint-url><identity>none</identity></endpoint><endpoint><id>alfresco</id><name>Alfresco - user access</name><description>Access to Alfresco Repository WebScripts that require user authentication</description><connector-id>alfresco</connector-id><endpoint-url>http://localhost:8080/alfresco/s</endpoint-url><identity>user</identity></endpoint><endpoint><id>alfresco-feed</id><name>Alfresco Feed</name><description>Alfresco Feed - supports basic HTTP authentication via the EndPointProxyServlet</description><connector-id>http</connector-id><endpoint-url>http://localhost:8080/alfresco/s</endpoint-url><basic-auth>true</basic-auth><identity>user</identity></endpoint><endpoint><id>activiti-admin</id><name>Activiti Admin UI - user access</name><description>Access to Activiti Admin UI, that requires user authentication</description><connector-id>activiti-admin-connector</connector-id><endpoint-url>http://localhost:8080/alfresco/activiti-admin</endpoint-url><identity>user</identity></endpoint></remote></config>-->
  <!-- 
        Overriding endpoints to reference an Alfresco server with external SSO enabled
        NOTE: If utilising a load balancer between web-tier and repository cluster, the "sticky
              sessions" feature of your load balancer must be used.
        NOTE: If alfresco server location is not localhost:8080 then also combine changes from the
              "example port config" section below.
        *Optional* keystore contains SSL client certificate + trusted CAs.
        Used to authenticate share to an external SSO system such as CAS
        Remove the keystore section if not required i.e. for NTLM.
        
        NOTE: For Kerberos SSO rename the "KerberosDisabled" condition above to "Kerberos"
        
        NOTE: For external SSO, switch the endpoint connector to "AlfrescoHeader" and set
              the userHeader to the name of the HTTP header that the external SSO
              uses to provide the authenticated user name.
   -->
  <!--
   <config evaluator="string-compare" condition="Remote"><remote><keystore><path>alfresco/web-extension/alfresco-system.p12</path><type>pkcs12</type><password>alfresco-system</password></keystore><connector><id>alfrescoCookie</id><name>Alfresco Connector</name><description>Connects to an Alfresco instance using cookie-based authentication</description><class>org.alfresco.web.site.servlet.SlingshotAlfrescoConnector</class></connector><connector><id>alfrescoHeader</id><name>Alfresco Connector</name><description>Connects to an Alfresco instance using header and cookie-based authentication</description><class>org.alfresco.web.site.servlet.SlingshotAlfrescoConnector</class><userHeader>SsoUserHeader</userHeader></connector><endpoint><id>alfresco</id><name>Alfresco - user access</name><description>Access to Alfresco Repository WebScripts that require user authentication</description><connector-id>alfrescoCookie</connector-id><endpoint-url>http://localhost:8080/alfresco/wcs</endpoint-url><identity>user</identity><external-auth>true</external-auth></endpoint></remote></config>-->
</alfresco-config>